@using AssessingConditionModel.Models.PatientModel
@model Patient
@*

    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    
}

<html>
<head>
    <title>Информация о пациенте</title>
</head>
<body>
    <div>
        <p style="font-size:20px">Информация о пациенте:</p>
         @await Html.PartialAsync("PartialParametersView", Model)
    </div>
    <div>
        <table>
            <tr>
                <th><button onclick="LoadParameters('clinicalParameters')">Клинические параметры</button></th>
                <th><button onclick="LoadParameters('functionalParameters')">Функциональные параметры</button></th>
                <th><button onclick="LoadParameters('instrumentalParameters')">Инструментальные параметры</button></th>
                <th><button onclick="LoadState()">Состояние пациента</button></th>
            </tr>
        </table>
    </div>
    <div id="ParamsContent">

    </div>
   
</body>
</html>

<script>
    function LoadParameters(parametersIdTable) {
        var patientId = @Model.MedicalHistoryNumber;
        $.ajax({
            url: '@Url.Action("SetParametersTable", "Home")',
            data: {patientId: patientId, parametersIdTable:parametersIdTable},
            type: 'get',
            cache: false,
            async: true,
            success: function (result) {
                $('#ParamsContent').html(result);
            }
        });
    }

    function LoadState() {
        var patientId = @Model.MedicalHistoryNumber;
        $.ajax({
            url: '@Url.Action("GetPatientState", "Home")',
            data: {patientId: patientId},
            type: 'get',
            cache: false,
            async: true,
            success: function (result) {
                $('#ParamsContent').html(result);
            }
        });
    }
</script>


