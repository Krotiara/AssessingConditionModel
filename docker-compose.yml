version: '3.4'

services:

  envoygateway:
    build:
      context: .
      dockerfile: src/ApiGateways/Envoy/Dockerfile
    ports:
      - "9901:9901"
      - "10000:10000"
    volumes:
      - ./src/ApiGateways/Envoy/envoy.yaml:/etc/envoy/envoy.yaml
    networks:
        - aModelNetwork

  models.api:
    image: ${DOCKER_REGISTRY-}modelsapi
    container_name: models.api
    build:
      context: .
      dockerfile: src/Services/Models.API/Models.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_HTTPS_PORT=8004
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8035:80
    networks:
        - aModelNetwork
    restart: on-failure

  agentinputcodeexecutor.api:
    image: ${DOCKER_REGISTRY-}agentinputcodeexecutorapi
    container_name: agentinputcodeexecutor.api
    build:
      context: .
      dockerfile: src/Services/AgentInputCodeExecutor.API/AgentInputCodeExecutor.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - PATIENTRESOLVER_API_URL=http://patientsresolver.api:80
      - BIO_AGE_API_URL=http://bioAge.api:80
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_HTTPS_PORT=8004
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8034:80
    networks:
        - aModelNetwork
    restart: on-failure
    depends_on:
      - rabbitmq
  
  web:
    image: ${DOCKER_REGISTRY-}web
    build:
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - API_URl=http://envoygateway:10000
    ports:
      - 8011:80
      - 8010:443
    volumes:
      - ./https:/https:ro
    networks:
        - aModelNetwork

  patientsresolver.api:
    image: ${DOCKER_REGISTRY-}patientsresolverapi
    container_name: patientsresolver.api
    build:
      context: .
      dockerfile: src/Services/PatientsResolver.API/PatientsResolver.API/Dockerfile
    #volumes:
    #  #- "C:/TestData:/data"
    #  - ./https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DATA_HANDLER_URL=http://patientdatahandler.api:80
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_HTTPS_PORT=8004
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8033:80
    networks:
        - aModelNetwork
    restart: on-failure
    depends_on:
      - rabbitmq

  patientdatahandler.api:
    image: ${DOCKER_REGISTRY-}patientdatahandlerapi
    container_name: patientdatahandler.api
    build:
      context: .
      dockerfile: src/Services/PatientDataHandler.API/PatientDataHandler.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 8005:80
    #volumes:
    #  - ./https:/https:ro
    networks:
        - aModelNetwork
    restart: on-failure
    depends_on:
      - rabbitmq

  agents.api:
    image: ${DOCKER_REGISTRY-}agentsapi
    container_name: agents.api
    build:
      context: .
      dockerfile: src/Services/Agents.API/Agents.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #- PATIENTRESOLVER_API_URL=http://patientsresolver.api:80
      #- BIO_AGE_API_URL=http://bioAge.api:80
      - CODE_EXECUTOR_API_URL=http://agentinputcodeexecutor.api:80
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_HTTPS_PORT=8012
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8002:80
      #- 8012:443
    #volumes:
    #  - ./https:/https:ro
    networks:
        - aModelNetwork
    restart: on-failure
    depends_on:
      - rabbitmq

  bioAge.api:
    image: ${DOCKER_REGISTRY-}bioageapi
    container_name: bioAge.api
    build:
      context: .
      dockerfile: src/Services/BioAge.API/BioAge.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_HTTPS_PORT=8006
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8007:80
      #- 8006:443
    #volumes:
    #  - ./https:/https:ro
    networks:
        - aModelNetwork
    restart: on-failure
    #extra_hosts:
    #  - host.docker.internal:host-gateway

  #containerregister.api:
  #  image: ${DOCKER_REGISTRY-}containerregisterapi
  #  tty: true
  #  build:
  #    context: .
  #    dockerfile: src/Services/ContainerRegister.API/ContainerRegister.API/Dockerfile
  #  ports:
  #    - 8001:80
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    container_name: rabbitmq
    tty: true
    hostname: rabbitmq
    ports:
        - "15672:15672"
        - "5672:5672"
    image: rabbitmq:3-management
    environment:
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=password
    networks:
        - aModelNetwork


  postgres_image:
    container_name: postgresql
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgresData:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "lisa2021"
      POSTGRES_DB: "PatientData_db"
    networks:
        - aModelNetwork

  #pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:5.7
  #   environment:
  #       PGADMIN_DEFAULT_EMAIL: "70dog@mail.ru"
  #       PGADMIN_DEFAULT_PASSWORD: "password"
  #       PGADMIN_CONFIG_SERVER_MODE: "False"
  #   volumes:
  #    - ./pgadmin:/var/lib/pgadmin
  #    #- ./sql:/tmp
  #   depends_on:
  #    - postgres_image
  #   #ports:
  #    #- "5051:80"
  #   restart: unless-stopped
  #   #networks:
  #   # - postgres

  #bioAge.mlServer:
  #   image: ${DOCKER_REGISTRY-}bioagemlserver
  #   build:
  #      context: .
  #      dockerfile: src/Services/BioAge.MLServer/BioAge.MLServer/Dockerfile
  #   ports:
  #     - "8080:80"


volumes:
   db_volume:
   pgadmin:
   postgresData:
       external: true

networks:
    aModelNetwork:
        external: true
#  postgres: 
#    driver: bridge

    

