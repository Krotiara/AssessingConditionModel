version: '3.4'

services:
  patientsresolver.api:
    image: ${DOCKER_REGISTRY-}patientsresolverapi
    container_name: patientsresolver.api
    build:
      context: .
      dockerfile: src/Services/PatientsResolver.API/PatientsResolver.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 8033:80

  agents.api:
    image: ${DOCKER_REGISTRY-}agentsapi
    container_name: agents.api
    build:
      context: .
      dockerfile: src/Services/Agents.API/Agents.API/Dockerfile
    ports:
      - 8002:80

  parameters.api:
    image: ${DOCKER_REGISTRY-}parametersapi
    container_name: parameters.api
    build:
      context: .
      dockerfile: src/Services/Parameters.API/Parameters.API/Dockerfile
    ports:
      - 8003:80

  envoygateway:
    build:
        context: .
        dockerfile: src/ApiGateways/Envoy/Dockerfile
    ports:
        - "9901:9901"
        - "10000:10000"
    volumes:
        - ./src/ApiGateways/Envoy/envoy.yaml:/etc/envoy/envoy.yaml

  acm.mongo:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: aAAsuMHX6PefWh9ZpvPnT3E64yBgg5
    volumes:
     - ./mongo:/data/db
    ports:
      - "18570:27017"


  models.mlserver:
    image: krotiara/models.mlserver:latest
    container_name: models.mlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 5001:80
    restart: on-failure


volumes:
   db_volume:
   pgadmin:
   postgresData:
       external: true