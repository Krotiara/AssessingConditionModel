version: '3.4'

services:
  patientsresolver.api:
    image: ${DOCKER_REG}/patientsresolverapi:latest
    container_name: patientsresolver.api
    build:
      context: .
      dockerfile: src/Services/PatientsResolver.API/PatientsResolver.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 8033:80

  agents.api:
    image: ${DOCKER_REG}/agentsapi:latest
    container_name: agents.api
    build:
      context: .
      dockerfile: src/Services/Agents.API/Agents.API/Dockerfile
    ports:
      - 8002:80

  parameters.api:
    image: ${DOCKER_REG}/parametersapi:latest
    container_name: parameters.api
    build:
      context: .
      dockerfile: src/Services/Parameters.API/Parameters.API/Dockerfile
    ports:
      - 8003:80

  envoygateway:
    container_name: envoygateway
    build:
        context: .
        dockerfile: src/ApiGateways/Envoy/Dockerfile
    ports:
        - "9901:9901"
        - "10000:10000"
    volumes:
        - ./src/ApiGateways/Envoy/envoy.yaml:/etc/envoy/envoy.yaml

  acm.mongo:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWD}
    volumes:
     - ./mongo:/data/db
    ports:
      - "18570:27017"

  postgres:
    image: postgres
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./pg_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  models.mlserver:
    image: ${DOCKER_REG}/models.mlserver:latest
    container_name: models.mlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 5001:80
    restart: on-failure

  acs.client:
    image: ${DOCKER_REG}/acsclient:latest
    container_name: acs.client
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure
    ports:
     - 5002:80

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672