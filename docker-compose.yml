version: '3.4'

services:
  
  web:
    image: ${DOCKER_REGISTRY-}web
    build:
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8010
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8011:80
      - 8010:443
    volumes:
      - ~/.aspnet/https:/https:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  tempgateway:
    image: ${DOCKER_REGISTRY-}tempgateway
    build:
      context: .
      dockerfile: src/ApiGateways/TempGateway/TempGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8009
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8008:80
      - 8009:443
    volumes:
      #- "C:/TestData:/data"
      - ~/.aspnet/https:/https:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  patientsresolver.api:
    image: ${DOCKER_REGISTRY-}patientsresolverapi
    build:
      context: .
      dockerfile: src/Services/PatientsResolver.API/PatientsResolver.API/Dockerfile
    volumes:
      #- "C:/TestData:/data"
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8004
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8033:80
      - 8004:443
    extra_hosts:
      - host.docker.internal:host-gateway

  #influencecalculator.api:
  #  image: ${DOCKER_REGISTRY-}influencecalculatorapi
  #  build:
  #    context: .
  #    dockerfile: src/Services/InfluenceCalculator.API/InfluenceCalculator.API/Dockerfile

  patientdatahandler.api:
    image: ${DOCKER_REGISTRY-}patientdatahandlerapi
    build:
      context: .
      dockerfile: src/Services/PatientDataHandler.API/PatientDataHandler.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8005:80
    volumes:
      - ~/.aspnet/https:/https:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  agents.api:
    image: ${DOCKER_REGISTRY-}agentsapi
    build:
      context: .
      dockerfile: src/Services/Agents.API/Agents.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8012
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8002:80
      - 8012:443
    volumes:
      - ~/.aspnet/https:/https:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  bioAge.api:
    image: ${DOCKER_REGISTRY-}bioageapi
    build:
      context: .
      dockerfile: src/Services/BioAge.API/BioAge.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8006
      - ASPNETCORE_Kestrel__Certificates__Default__Password=lisa2021
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8007:80
      - 8006:443
    volumes:
      - ~/.aspnet/https:/https:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  #containerregister.api:
  #  image: ${DOCKER_REGISTRY-}containerregisterapi
  #  tty: true
  #  build:
  #    context: .
  #    dockerfile: src/Services/ContainerRegister.API/ContainerRegister.API/Dockerfile
  #  ports:
  #    - 8001:80
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    container_name: rabbitmq
    tty: true
    hostname: rabbitmq
    ports:
        - "15672:15672"
        - "5672:5672"
    image: rabbitmq:3-management
    environment:
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=password

  postgres_image:
    container_name: postgresql
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgresData:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "lisa2021"
      POSTGRES_DB: "PatientData_db"
    #networks:
    #  - postgres

  #pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:5.7
  #   environment:
  #       PGADMIN_DEFAULT_EMAIL: "70dog@mail.ru"
  #       PGADMIN_DEFAULT_PASSWORD: "password"
  #       PGADMIN_CONFIG_SERVER_MODE: "False"
  #   volumes:
  #    - ./pgadmin:/var/lib/pgadmin
  #    #- ./sql:/tmp
  #   depends_on:
  #    - postgres_image
  #   #ports:
  #    #- "5051:80"
  #   restart: unless-stopped
  #   #networks:
  #   # - postgres

  #bioAge.mlServer:
  #   image: ${DOCKER_REGISTRY-}bioagemlserver
  #   build:
  #      context: .
  #      dockerfile: src/Services/BioAge.MLServer/BioAge.MLServer/Dockerfile
  #   ports:
  #     - "8080:80"


volumes:
   db_volume:
   pgadmin:
   postgresData:
       external: true

#networks:
#  postgres:
#    driver: bridge

    

