@using Interfaces
@using System.Reflection
@model InfluenceViewFormat
@{
    var enumValues = Enum.GetValues(typeof(ParameterNames))
    .Cast<ParameterNames>()
    .Where(x=>
    {
        MemberInfo memberInfo = typeof(ParameterNames).GetMember(x.ToString()).First();
        return memberInfo.GetCustomAttribute<NoAllowToSelectAttribute>() == null;
    })
    .Select(x => new SelectListItem
                {
                    Value = ((int)x).ToString(),
                    Text = x.GetDisplayAttributeValue()
                })
    .OrderBy(x=>x.Text); 
}
<table>
    <thead>
        <tr>
            <th><p>Наименование</p></th>
            <th><p>Значение</p></th>
            <th><p>Временная отметка</p></th>
            <th><p>Вторичный</p></th>
        </tr>
    </thead>
    <tbody>
        @for(int i=0; i < Model.Parameters.Count;i++)
        {
            <tr>
                <th>@Html.DropDownListFor(
                    x=>x.Parameters[i].ParameterName, enumValues)
                    <div><span asp-validation-for="Parameters[i].ParameterName" class="text-danger"></span></div>
                </th>
                <th>@Html.TextBoxFor(x=>x.Parameters[i].Value)
                     <div><span asp-validation-for="Parameters[i].Value" class="text-danger"></span></div>
                </th>
                <th>@Html.EditorFor(x=>x.Parameters[i].Timestamp, "{0:yyyy-MM-dd}", new {htmlAttributes = new {@type = "date"}})
                     <div><span asp-validation-for="Parameters[i].Timestamp" class="text-danger"></span></div>
                </th>
                <th>@Html.EditorFor(x=>x.Parameters[i].IsDynamic)
                     <div><span asp-validation-for="Parameters[i].IsDynamic" class="text-danger"></span></div>
                </th>
            </tr>
        }
    </tbody>
</table>
