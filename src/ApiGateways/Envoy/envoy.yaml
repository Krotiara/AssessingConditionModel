admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
    listeners:
    - name: listener_0
      address:
        socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 10000
      filter_chains:
      filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - name: "agents_backend"
                match:
                  prefix: "/agents"
                route:
                  prefix_rewrite: "/agents"
                  cluster: agents_service
              - name: "test"
                match:
                  prefix: "/"
                route:
                  host_rewrite: www.google.com
                  #prefix_rewrite: "/movies"
                  cluster: google_service
          http_filters:
          - name: envoy.filters.http.router



admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: assessingConditionModel_backend_route
            virtual_hosts:
            - name:  assessingConditionModel_backend
              domains:
              - "*"
              routes:
              - name: "agents-long"
                match:
                  prefix: "/agents/"
                route:
                  auto_host_rewrite: true
                  prefix_rewrite: "/agents/"
                  cluster: agents_service
              - name: "testGoogle"
                match:
                  prefix: "/goo/"
                route:
                  host_rewrite: www.google.com
                  cluster: google_service
          http_filters:
          - name: envoy.router
          access_log:
          - name: envoy.file_access_log
            filter:
              not_health_check_filter: {}
            config:
              json_format:
                time: "%START_TIME%"
                protocol: "%PROTOCOL%"
                duration: "%DURATION%"
                request_method: "%REQ(:METHOD)%"
                request_host: "%REQ(HOST)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                response_flags: "%RESPONSE_FLAGS%"
                route_name: "%ROUTE_NAME%"
                upstream_host: "%UPSTREAM_HOST%"
                upstream_cluster: "%UPSTREAM_CLUSTER%"
                upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
              path: "/tmp/access.log"
  clusters:
  - name: agents_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: agents.api
        port_value: 80
  - name: google_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: google_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: www.google.com
                port_value: 443
  #- name: catalog
  #  connect_timeout: 0.25s
  #  type: strict_dns
  #  lb_policy: round_robin
  #  hosts:
  #  - socket_address:
  #      address: catalog-api
  #      port_value: 80
  #- name: basket
  #  connect_timeout: 0.25s
  #  type: strict_dns
  #  lb_policy: round_robin
  #  hosts:
  #  - socket_address:
  #      address: basket-api
  #      port_value: 80
  #- name: ordering
  #  connect_timeout: 0.25s
  #  type: strict_dns
  #  lb_policy: round_robin
  #  hosts:
  #  - socket_address:
  #      address: ordering-api
  #      port_value: 80
  #- name: signalr-hub
  #  connect_timeout: 0.25s
  #  type: strict_dns
  #  lb_policy: round_robin
  #  hosts:
  #  - socket_address:
  #      address: ordering-signalrhub
  #      port_value: 80